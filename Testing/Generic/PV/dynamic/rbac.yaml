---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: nfs-provisioner-sa
  namespace: nfs-provisioner
---
kind: ClusterRole # Role of kubernetes
apiVersion: rbac.authorization.k8s.io/v1 # auth API
metadata:
  name: nfs-provisioner-cr
rules:
  - apiGroups: [""] # rules on persistentvolumes
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-provisioner-crb
subjects:
  - kind: ServiceAccount
    name: nfs-provisioner-sa # defined on top of file
    namespace: nfs-provisioner
roleRef: # binding cluster role to service account
  kind: ClusterRole
  name: nfs-provisioner-cr # name defined in clusterRole
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: nfs-provisioner
  name: nfs-provisioner-r
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
  - apiGroups: ["policy"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["baseline"]
    verbs: ["use"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: nfs-provisioner
  name: nfs-provisioner-r-rb
subjects:
  - kind: ServiceAccount
    name: nfs-provisioner-sa # same as top of the file
    # replace with namespace where provisioner is deployed
    namespace: nfs-provisioner
roleRef:
  kind: Role
  name: nfs-provisioner-r
  apiGroup: rbac.authorization.k8s.io
